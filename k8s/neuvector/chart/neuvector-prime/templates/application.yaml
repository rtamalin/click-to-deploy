apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: {{ .Release.Name }}
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": {{ .Chart.Name | quote }}, "partner_name": "Google Click to Deploy"}'
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  descriptor:
    type: NeuVector
    version: "{{ .Values.tag }}"
    description: |-
      NeuVector is an open source Container Security Platform.
      # Support
      NeuVector is supported by SUSE.
    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy NeuVector'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/neuvector/README.md
    - description: 'NeuVector documentation'
      url: https://open-docs.neuvector.com/
    notes: |-
      # Get authentication credentials for the cluster

      ```shell
      gcloud container clusters get-credentials [CLUSTER_NAME] --zone [CLUSTER_ZONE]
      ```
      where:
      * `[CLUSTER_NAME]` is the name of the cluster for this application
      * `[CLUSTER_ZONE]` is the zone, in which the cluster is operating

      Please read [here](https://cloud.google.com/kubernetes-engine/docs/quickstart#get_authentication_credentials_for_the_cluster) for more information.

      Make sure that all components are in `ready` status.

      Deployed service of NeuVector is ClusterIP type, so you can reach to NeuVector web console within a kubernetes cluster.

      Get NeuVector admin user credentials from application page in console or you can print it by running below commands:
      ```shell
      # Get admin user credentials for web interface
      NEUVECTOR_ADMIN_PASSWORD=$(kubectl get secret --namespace \
        {{ .Release.Namespace }} {{ .Release.Name }}-neuvector-secret \
        -o jsonpath="{.data.console-password}" | base64 --decode)
      NEUVECTOR_ADMIN_USERNAME=$(kubectl get secret \
        --namespace {{ .Release.namespace }} neuvector-init \
        -o jsonpath='{.data.userinitcfg\.yaml}' | base64 --decode | \
        python -c 'import sys, yaml; data=yaml.safe_load(sys.stdin);
                   print(data["users"][0]["Fullname"])')
      NEUVECTOR_ADMIN_PASSWORD=$(kubectl get secret \
        --namespace {{ .Release.namespace }} neuvector-init \
        -o jsonpath='{.data.userinitcfg\.yaml}' | base64 --decode | \
        python -c 'import sys, yaml; data=yaml.safe_load(sys.stdin);
                   print(data["users"][0]["Password"])')

      echo "username: ${NEUVECTOR_ADMIN_USERNAME}"
      echo "password: ${NEUVECTOR_ADMIN_PASSWORD}"
      ```

      Forward NeuVector service web console port to your machine.
      ```shell
      kubectl port-forward svc/{{ .Release.Name }}-neuvector \
        --namespace {{ .Release.Namespace }} 8443
      ```

      Then visit [http://localhost:8443/admin](http://localhost:8443/admin) on your web browser and login with `admin` user credentials.

  info:
  - name: neuvector
    type: Reference
    valueFrom:
      serviceRef:
        name: "{{ .Release.Name }}-neuvector"
  - name: neuvector console username
    value: admin
  - name: neuvector console password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: console-password
        name: "{{ .Release.Name }}-neuvector-secret"
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
  componentKinds:
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
  - group: apps/v1
    kind: Deployment
  - group: v1
    kind: PersistentVolumeClaim
